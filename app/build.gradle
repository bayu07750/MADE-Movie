plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.bayu07750.mademovie'
    compileSdk 34

    defaultConfig {
        applicationId "com.bayu07750.mademovie"
        minSdk 23
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }
    dynamicFeatures = [':bookmarkedmovie']

    bundle {
        language {
            enableSplit = false
        }
    }
}

dependencies {
    implementation project(path: ":core")
    implementation libs.androidx.core
    implementation libs.androidx.appcompat
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.lifecycle.viewmodel
    implementation libs.androidx.lifecycle.runtime
    implementation libs.androidx.startup
    implementation libs.androidx.paging
    implementation libs.androidx.fragment
    implementation libs.androidx.activity
    implementation libs.androidx.navigation.dynamic.feature
    implementation libs.androidx.splashscreen
    implementation libs.bundles.navigation
    implementation libs.bundles.koin
    implementation libs.google.material
    implementation libs.glide
    implementation libs.powermenu

    testImplementation libs.bundles.test.unit

    debugImplementation libs.leak.canary
}

kapt {
    correctErrorTypes true
}